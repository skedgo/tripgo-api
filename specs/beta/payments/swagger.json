{"swagger":"2.0","info":{"description":"Access to payment endpoints for bundles and bookings","version":"1.0","title":"Payment Endpoints","contact":{"name":"TripGo API","email":"api@tripgo.com"},"license":{"name":"Apache 2.0 License","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"basePath":"/satapp-debug/payment","tags":[{"name":"Card","description":"Endpoint for retrieving cards details and topping up money"},{"name":"Payment","description":"Payments of bookings and bundles"},{"name":"Bundle"},{"name":"Booking"}],"consumes":["application/json"],"produces":["application/json"],"paths":{"/{provider}/inspect":{"get":{"tags":["Card"],"summary":"Get all the provider account cards","description":"Inspects a provider account and returns all active card numbers and summary balances","operationId":"inspect","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"update","in":"query","description":"set to 'force' to ignore cached values","required":false,"type":"string","default":"no"},{"name":"provider","in":"path","description":"the provider","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ProviderCardDetails"}},"responseSchema":{"type":"array","items":{"$ref":"#/definitions/ProviderCardDetails"}}},"299":{"description":"Intermediate response, keep hitting this endpoint and you will get a 200","schema":{"type":"array","items":{"$ref":"#/definitions/ProviderCardDetails"}},"responseSchema":{"type":"array","items":{"$ref":"#/definitions/ProviderCardDetails"}}},"401":{"description":"Not allowed to access this resource","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"406":{"description":"Not a valid payment provider","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"444":{"description":"Missing required userToken","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"446":{"description":"Account not linked yet","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"491":{"description":"Error retrieving cards data","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"500":{"description":"Unknown API error","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}}}}},"/{provider}/account":{"get":{"tags":["Card"],"operationId":"getAccountStatus","produces":["application/json"],"parameters":[{"name":"provider","in":"path","required":true,"type":"string"},{"name":"userToken","in":"header","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","headers":{},"schema":{"$ref":"#/definitions/ConnectedAccount"},"responseSchema":{"$ref":"#/definitions/ConnectedAccount"}}}},"post":{"tags":["Card"],"operationId":"connectAccount","produces":["application/json"],"parameters":[{"name":"provider","in":"path","required":true,"type":"string"},{"name":"userToken","in":"header","required":false,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/JsonUser"}}],"responses":{"200":{"description":"successful operation","headers":{},"schema":{"$ref":"#/definitions/ConnectedAccount"},"responseSchema":{"$ref":"#/definitions/ConnectedAccount"}}}},"delete":{"tags":["Card"],"operationId":"disconnectAccount","produces":["application/json"],"parameters":[{"name":"provider","in":"path","required":true,"type":"string"},{"name":"userToken","in":"header","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","headers":{},"schema":{"$ref":"#/definitions/ConnectedAccount"},"responseSchema":{"$ref":"#/definitions/ConnectedAccount"}}}}},"/{provider}/card/{card}":{"get":{"tags":["Card"],"summary":"Get a provider cards details","description":"Returns details associated with a single provider card number","operationId":"inspectCard","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"update","in":"query","description":"set to 'force' to ignore cached values","required":false,"type":"string","default":"no"},{"name":"provider","in":"path","description":"the provider","required":true,"type":"string"},{"name":"card","in":"path","description":"the [rovider card number to be queried","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProviderCardDetails"},"responseSchema":{"$ref":"#/definitions/ProviderCardDetails"}},"401":{"description":"Not allowed to access this resource","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"406":{"description":"Not a valid payment provider","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"444":{"description":"Missing required userToken","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"446":{"description":"Account not linked yet","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"491":{"description":"Error retrieving cards data","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"500":{"description":"Unknown API error","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}}}}},"/{provider}/card/{card}/settings":{"post":{"tags":["Card"],"summary":"Adds a notification condition to a given card","description":"","operationId":"saveCardSettings","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"provider","in":"path","description":"the provider","required":true,"type":"string"},{"name":"card","in":"path","description":"the provider card number to be queried","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/JsonCardSettings"}}],"responses":{"200":{"description":"Success"},"401":{"description":"Not allowed to access this resource","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"406":{"description":"Not a valid payment provider","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"444":{"description":"Missing required userToken","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"446":{"description":"Account not linked yet","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}},"490":{"description":"No registered PN tokens yet","schema":{"$ref":"#/definitions/ErrorMessage"},"responseSchema":{"$ref":"#/definitions/ErrorMessage"}}}}},"/{provider}/find/{cardNumber}":{"get":{"tags":["Card"],"summary":"Retrieves the user id from the cardNumber","description":"","operationId":"findUserID","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"provider","in":"path","required":true,"type":"string"},{"name":"cardNumber","in":"path","description":"id of the phone","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/LatestCardTransaction"},"responseSchema":{"$ref":"#/definitions/LatestCardTransaction"}}}}},"/ephemeral-key":{"get":{"tags":["Payment"],"summary":"get ephemeral key","description":"this is required to start a payment for a given users and be able to retrieve stored cc on stripe","operationId":"getEphemeralKey","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"stripe-api-version","in":"query","description":"stripe api version","required":true,"type":"string","x-example":"2020-08-27"},{"name":"psb","in":"query","description":"whether to use Payment SandBox or not","required":false,"type":"string","default":"false","x-example":"true"}],"responses":{"200":{"description":"successful operation","schema":{"type":"string"},"responseSchema":{"type":"string"}}}}},"/bundle/{bundleId}":{"get":{"tags":["Payment","Bundle"],"summary":"future bundle payment options","description":"this endpoint will return the options to pay the future bundle","operationId":"payBundle","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"bundleId","in":"path","description":"bundle id","required":true,"type":"string"},{"name":"ignorePending","in":"query","description":"whether to ignore future bundle with pending payment status","required":false,"type":"boolean","default":false},{"name":"psb","in":"query","description":"whether to use Payment SandBox or not","required":false,"type":"string","default":"false","x-example":"true"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/PaymentOptionsForBundle"},"responseSchema":{"$ref":"#/definitions/PaymentOptionsForBundle"}}}}},"/bundle/{bundleId}/pay":{"get":{"tags":["Payment","Bundle"],"summary":"pay future bundle","description":"the urls to hits this endpoint come from 'future bundle payment options' endpoint","operationId":"payBundleWithOption","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"bundleId","in":"path","description":"bundle id","required":true,"type":"string"},{"name":"reward","in":"query","required":false,"type":"string"},{"name":"psb","in":"query","required":false,"type":"string","default":"false"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CreatePaymentResponse"},"responseSchema":{"$ref":"#/definitions/CreatePaymentResponse"}}}}},"/bundle/paid/{paymentIntent}":{"get":{"tags":["Payment","Bundle"],"summary":"confirm future bundle","description":"this endpoint will set the future bundle (with payment status based on stripe)","operationId":"confirmPayment","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"paymentIntent","in":"path","description":"payment intent id","required":true,"type":"string"},{"name":"sync","in":"query","description":"whether to wait for balance update or not","required":false,"type":"boolean","default":true},{"name":"psb","in":"query","description":"whether to use Payment SandBox or not","required":false,"type":"string","default":"false","x-example":"true"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserBundleDTO"},"responseSchema":{"$ref":"#/definitions/UserBundleDTO"}}}}},"/stripe/webhook":{"post":{"tags":["Payment"],"operationId":"stripeWebhook","produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"string"}},{"name":"appID","in":"query","required":false,"type":"string"},{"name":"psb","in":"query","required":false,"type":"string","default":"false"}],"responses":{"default":{"description":"successful operation"}}}},"/booking/{bookingId}/pay":{"get":{"tags":["Payment","Booking"],"summary":"pay booking","description":"the urls to hit this endpoint come from the quick booking hit","operationId":"payBookingWithOption","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"bookingId","in":"path","description":"booking id","required":true,"type":"string"},{"name":"psb","in":"query","required":false,"type":"string","default":"false"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CreatePaymentResponse"},"responseSchema":{"$ref":"#/definitions/CreatePaymentResponse"}}}}},"/booking/paid/{paymentIntent}":{"get":{"tags":["Payment","Booking"],"summary":"confirm booking","description":"this endpoint will set the booking with payment status based on stripe","operationId":"confirmPaymentForBooking","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"paymentIntent","in":"path","description":"payment intent id","required":true,"type":"string"},{"name":"psb","in":"query","description":"whether to use Payment SandBox or not","required":false,"type":"string","default":"false","x-example":"true"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/TripUpdateUrl"},"responseSchema":{"$ref":"#/definitions/TripUpdateUrl"}}}}},"/booking/{moneyTransactionId}/charge":{"get":{"tags":["Payment","Booking"],"summary":"charge booking","description":"this endpoint is used by the dashboard to charge a booking","operationId":"capturePayment","produces":["application/json"],"parameters":[{"name":"moneyTransactionId","in":"path","description":"moneyTransactionId id","required":true,"type":"string"},{"name":"psb","in":"query","description":"whether to use Payment SandBox or not","required":false,"type":"string","default":"false","x-example":"true"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JsonResultPaymentStatus"},"responseSchema":{"$ref":"#/definitions/JsonResultPaymentStatus"}}}}},"/booking/{bookingId}/payment":{"post":{"tags":["Payment","Booking"],"summary":"confirm booking","description":"this endpoint will set the booking with payment status based on stripe","operationId":"confirmPaymentMethodForBooking","produces":["application/json"],"parameters":[{"name":"userToken","in":"header","required":false,"type":"string"},{"name":"bookingId","in":"path","description":"booking id","required":true,"type":"string"},{"name":"psb","in":"query","description":"whether to use Payment SandBox or not","required":false,"type":"string","default":"false","x-example":"true"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/PaymentMethod"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/TripUpdateUrl"},"responseSchema":{"$ref":"#/definitions/TripUpdateUrl"}}}}}},"definitions":{"JsonCardSettings":{"type":"object","required":["money","nickname","pass"],"properties":{"nickname":{"type":"string","example":"my card","description":"card nick name"},"defaultSchedule":{"type":"boolean"},"money":{"description":"money settings and notifications (values in cents)","$ref":"#/definitions/MoneySetting"},"pass":{"description":"pass settings and notifications (values in days)","$ref":"#/definitions/PassSetting"}},"description":"Represents information about notifications config"},"MoneySetting":{"type":"object","required":["defaultTopUp","notificationEnabled","notificationThreshold","topUpEnabled"],"properties":{"notificationEnabled":{"type":"boolean","example":false,"description":"notification enabled/disabled"},"notificationThreshold":{"type":"integer","format":"int32","example":10,"description":"notification threshold, days or cents"},"topUpEnabled":{"type":"boolean","example":false,"description":"top up enabled/disabled"},"defaultTopUp":{"type":"integer","format":"int32","example":1000,"description":"top up amount (in cents)"}}},"PassSetting":{"type":"object","required":["defaultPeriod","notificationEnabled","notificationThreshold","renewEnabled"],"properties":{"notificationEnabled":{"type":"boolean","example":false,"description":"notification enabled/disabled"},"notificationThreshold":{"type":"integer","format":"int32","example":10,"description":"notification threshold, days or cents"},"renewEnabled":{"type":"boolean","example":false,"description":"renew enabled/disabled"},"defaultPeriod":{"type":"integer","format":"int32","example":30,"description":"period amount (in days)"}}},"ProviderCardDetails":{"type":"object","required":["cardHolder","cardNumber","money","settings","updatedAt"],"properties":{"cardNumber":{"type":"string","description":"provider card number"},"cardHolder":{"type":"string","description":"name of card holder"},"money":{"type":"integer","format":"int32","description":"provider money balance in cents"},"pass":{"type":"string","description":"expiry date and time (ISO8601) of current provider pass"},"passZoneInfo":{"type":"string","example":"Zone 1-Zone 2","description":"Pass Zone information"},"updatedAt":{"type":"string","description":"Date and time (ISO8601) results fetched from provider"},"settings":{"description":"nickname and notifications settings","$ref":"#/definitions/JsonCardSettings"},"cardType":{"type":"string","description":"Type of card, e.g. Full Fare"},"cardExpiry":{"type":"string","description":"Expiry date (ISO8601) of the card (not to be confused with provider pass)"},"cardStatus":{"type":"string","description":"Card status. Currently always \"Active\""},"moneyPending":{"type":"integer","format":"int32","description":"provider money amount to be added to card at next touch on"},"passPending":{"type":"integer","format":"int32","description":"Duration in days of provider pass to be added to card at next touch on"},"lastTransactionDate":{"type":"string","description":"Date and time (ISO8601) of last transaction on this provider card"}}},"ErrorMessage":{"type":"object","properties":{"error":{"type":"string"},"errorCode":{"type":"integer","format":"int32"},"usererror":{"type":"boolean"}}},"ConnectedAccount":{"type":"object","required":["connected"],"properties":{"connected":{"type":"boolean","description":"whether the account is connected or not"}}},"JsonUser":{"type":"object","properties":{"password":{"type":"string","example":"**passwd**","description":"any password is valid"},"username":{"type":"string","example":"email@address.com","description":"The username must be a valid email address"}}},"LatestCardTransaction":{"type":"object","properties":{"userID":{"type":"string"},"provider":{"type":"string"},"id":{"type":"string"},"timestamp":{"type":"integer","format":"int64"}}},"BillingCycle":{"type":"object","properties":{"externalPaymentID":{"type":"string","description":"external payment id"},"paymentTimestamp":{"type":"string","example":"2020-11-04T23:59:59+11:00[Australia/Sydney]","description":"when this bundle was paid in YYYY-MM-DDTHH:MM:SS+00:00[zoneID] format (ISO 8601)"},"paymentStatus":{"type":"string","description":"payment status, one of (pending, succeeded, canceled)","enum":["PENDING","SUCCEEDED","CANCELED"]},"toBeAppliedTimestamp":{"type":"string","example":"2020-11-04T23:59:59+11:00[Australia/Sydney]","description":"when this bundle will be applied in YYYY-MM-DDTHH:MM:SS+00:00[zoneID] format (ISO 8601)"},"appliedTimestamp":{"type":"string","example":"2020-11-04T23:59:59+11:00[Australia/Sydney]","description":"when this bundle was applied in YYYY-MM-DDTHH:MM:SS+00:00[zoneID] format (ISO 8601)"},"expirationTimestamp":{"type":"string","example":"2020-11-04T23:59:59+11:00[Australia/Sydney]","description":"when this bundle will expire in YYYY-MM-DDTHH:MM:SS+00:00[zoneID] format (ISO 8601)"}}},"Color":{"type":"object","properties":{"blue":{"type":"integer","format":"int32","readOnly":true},"green":{"type":"integer","format":"int32","readOnly":true},"red":{"type":"integer","format":"int32","readOnly":true}}},"EnabledMode":{"type":"object","required":["mode","pointsPerCost","rewardPerCost"],"properties":{"mode":{"type":"string","description":"mode of transport"},"modeInfo":{"description":"transport mode info","$ref":"#/definitions/ModeInfo"},"pointsPerCost":{"type":"number","format":"float","description":"0 for unlimited/free, 1 by default, 0.9 for 10% discount"},"discountPoints":{"type":"integer","format":"int32","description":"in cents, 500 for 5 AUD fixed discount, not included if no discount"},"rewardPerCost":{"type":"number","format":"float","description":"0 for none (default), 1 for 100 points per dollar, 0.1 for 10 points per dollar"},"symbolicRewardPerCost":{"type":"boolean","description":"whether the reward cost is symbolic (information for the apps, but not used to compute them) or will be used to actually compute reward points (defaults to false)"},"hideCost":{"type":"boolean","description":"whether the cost should be hidden to the user or not (defaults to false)"},"notificationEmail":{"type":"string","description":"if present, represents an email address to inform once a user subscribes to the corresponding bundle"},"offerDescription":{"type":"string","description":"if present, it specify discount description otherwise it's build from the % and $ value"}}},"ModeInfo":{"type":"object","required":["alt","localIcon"],"properties":{"identifier":{"type":"string"},"localIcon":{"type":"string"},"alt":{"type":"string"},"description":{"type":"string"},"remoteIcon":{"type":"string"},"remoteDarkIcon":{"type":"string"},"color":{"$ref":"#/definitions/Color"},"remoteIconIsTemplate":{"type":"boolean"}}},"PaymentOption":{"type":"object","properties":{"method":{"type":"string","description":"When this is GET, our backend will return a payment intent, for the apps to pass to Stripe SDK (after selecting a payment option). When this is POST, apps need to POST `paymentResult.paymentMethod?.stripeId` to the `url` => Response is update URL","enum":["GET","POST"]},"url":{"type":"string","description":"internal url to use this option"},"currency":{"type":"string","description":"currency of the amount"},"discountedPrice":{"type":"integer","format":"int32","description":"price to pay (including discounts, if any)"},"fullPrice":{"type":"integer","format":"int32","description":"price of the bundle"},"description":{"type":"string","description":"description of the payment option"},"reward":{"description":"reward that will be used, if present","$ref":"#/definitions/UserReward"}}},"PaymentOptionsForBundle":{"type":"object","properties":{"bundle":{"description":"bundle","$ref":"#/definitions/UserBundleDTO"},"paymentOptions":{"type":"array","description":"payment options","items":{"$ref":"#/definitions/PaymentOption"}}}},"UserBundleDTO":{"type":"object","required":["id"],"properties":{"id":{"type":"string","description":"unique id"},"name":{"type":"string","description":"bundle name"},"description":{"type":"string","description":"bundle description"},"status":{"type":"string","description":"active or inactive"},"subscriptionFee":{"type":"integer","format":"int32","description":"in cents, how much will be charged to the user every month"},"subscriptionDurationInDays":{"type":"integer","format":"int32","description":"in days, how long it will last, when present."},"subscriptionAutoRenew":{"type":"boolean","description":"whether it will auto-renew at the end of the subscription or not"},"currency":{"type":"string","description":"currency used for either/both subscriptionFee and minimumPurchase"},"transportModes":{"type":"array","description":"enabled modes with specific deals, non included ones are assumed as pay as you go","items":{"$ref":"#/definitions/EnabledMode"}},"currentBillingCycle":{"description":"current billing cycle, if applies","$ref":"#/definitions/BillingCycle"},"mayPurchase":{"type":"boolean","description":"whether it can be purchased or not"},"purchaseDenialReason":{"type":"string","description":"when mayPurchase is false, this will be present with an explanation for the user"},"futureBillingCycle":{"description":"future billing cycle, if applies","$ref":"#/definitions/BillingCycle"}}},"UserReward":{"type":"object","required":["description","id","pointsRequired","title"],"properties":{"id":{"type":"string","description":"Reward ID"},"title":{"type":"string","example":"5% discount","description":"Title"},"code":{"type":"string","example":"FCV13#123","description":"Promo Code"},"description":{"type":"string","example":"Apply promo code when booking on partner's website","description":"Description"},"expiryDate":{"type":"string","example":"2020-11-04T23:59:59+11:00[Australia/Sydney]","description":"Expiry datetime in YYYY-MM-DDTHH:MM:SS+00:00[zoneID] format (ISO 8601)"},"termsURL":{"type":"string","description":"Terms & conditions URL"},"canRedeem":{"type":"boolean","description":"Indicates whether the user has enough points to redeem this reward or not"},"pointsRequired":{"type":"integer","format":"int32","description":"Indicates how many points does it cost"},"cashbackAmount":{"type":"integer","format":"int32","description":"if present, means this reward can be use to get credit when buying a new bundle (in cents)"},"approvalTimeframe":{"type":"integer","format":"int32","description":"how much days it usually takes to be reviewed by the staff, and either approve or refuse a redemption of this reward"},"imageURL":{"type":"string","description":"Image URL"},"featured":{"type":"boolean","description":"whether reward is featured or not"}}},"CreatePaymentResponse":{"type":"object","required":["url"],"properties":{"clientSecret":{"type":"string","description":"Stripe client secret (optional), if missing, means that we don't have a payment intent and we need a payment method back"},"url":{"type":"string","description":"internal url to confirm the payment is done"}}},"TripUpdateUrl":{"type":"object","required":["updateURL"],"properties":{"updateURL":{"type":"string","description":"trip update url"}}},"JsonResult":{"type":"object","required":["result"],"properties":{"result":{"type":"object"}}},"JsonResultPaymentStatus":{"type":"object","required":["result"],"properties":{"result":{"type":"string","enum":["PENDING","REQUIRES_CAPTURE","SUCCEEDED","CANCELED"]}}},"PaymentMethod":{"type":"object","required":["paymentMethod"],"properties":{"paymentMethod":{"type":"string","description":"Stripe payment method"}}}}}